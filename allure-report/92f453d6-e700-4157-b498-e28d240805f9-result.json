{"name": "验证骑行页面banner-违规举报", "status": "failed", "statusDetails": {"message": "AssertionError: assert False\n +  where False = assert_element_exist(<wda.Selector object at 0x11b0fe850>)\n +    where <wda.Selector object at 0x11b0fe850> = <wda.Client object at 0x11ad844c0>(label='上传违规车辆编号')", "trace": "self = <test_case.test_2_homepage.test_1_ride.test_3_banner.TestHomepageRideBanner object at 0x11afbd3d0>\ninfo = Dev(device_info={'timeZone': 'GMT+0800', 'currentLocale': 'zh_CN', 'model': 'iPhone', 'uuid': 'ADE31975-5D20-4A91-963B...1', 'thermalState': 2, 'userInterfaceIdiom': 0, 'userInterfaceStyle': 'light', 'name': 'iPhone', 'isSimulator': False})\n\n    @pytest.mark.order(5)\n    @allure.title('验证骑行页面banner-违规举报')\n    def test_homepage_ride_banner_report_violation(self, info):\n        device = info.device\n        # 点击违规举报\n        try:\n            for i in range(5):\n                # 滑动banner至违规举报\n                device.swipe(0.8, 0.4, 0.2, 0.4)\n                if assert_element_exist(device(label=\"违规举报\"), retry_times=1):\n                    break\n                time.sleep(1)\n            device(label=\"违规举报\").click()\n            # 通过【上传违规车辆编号】文字验证是否进入违规举报页面\n            assert assert_element_exist(device(label=\"上传违规车辆编号\"))\n            attach_screenshot(device, '点击违规举报后截图')\n        except AssertionError as e:\n            logger.error(\"验证骑行页面banner-违规举报失败\")\n>           raise e\n\ntest_case/test_2_homepage/test_1_ride/test_3_banner.py:126: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_case.test_2_homepage.test_1_ride.test_3_banner.TestHomepageRideBanner object at 0x11afbd3d0>\ninfo = Dev(device_info={'timeZone': 'GMT+0800', 'currentLocale': 'zh_CN', 'model': 'iPhone', 'uuid': 'ADE31975-5D20-4A91-963B...1', 'thermalState': 2, 'userInterfaceIdiom': 0, 'userInterfaceStyle': 'light', 'name': 'iPhone', 'isSimulator': False})\n\n    @pytest.mark.order(5)\n    @allure.title('验证骑行页面banner-违规举报')\n    def test_homepage_ride_banner_report_violation(self, info):\n        device = info.device\n        # 点击违规举报\n        try:\n            for i in range(5):\n                # 滑动banner至违规举报\n                device.swipe(0.8, 0.4, 0.2, 0.4)\n                if assert_element_exist(device(label=\"违规举报\"), retry_times=1):\n                    break\n                time.sleep(1)\n            device(label=\"违规举报\").click()\n            # 通过【上传违规车辆编号】文字验证是否进入违规举报页面\n>           assert assert_element_exist(device(label=\"上传违规车辆编号\"))\nE           AssertionError: assert False\nE            +  where False = assert_element_exist(<wda.Selector object at 0x11b0fe850>)\nE            +    where <wda.Selector object at 0x11b0fe850> = <wda.Client object at 0x11ad844c0>(label='上传违规车辆编号')\n\ntest_case/test_2_homepage/test_1_ride/test_3_banner.py:122: AssertionError"}, "attachments": [{"name": "log", "source": "a26f207f-c5c0-48b6-9dd4-3253ef5b3644-attachment.txt", "type": "text/plain"}], "start": 1698900968747, "stop": 1698900984217, "uuid": "5fb3197e-8c06-4a23-82aa-349b6b44039e", "historyId": "416c79b34ddd94e3acbc7366acdd6b47", "testCaseId": "6a0beffd7421e82bf2bde99f58e463ab", "fullName": "test_case.test_2_homepage.test_1_ride.test_3_banner.TestHomepageRideBanner#test_homepage_ride_banner_report_violation", "labels": [{"name": "feature", "value": "骑行页面-banner功能验证"}, {"name": "epic", "value": "[首页]模块"}, {"name": "tag", "value": "order(5)"}, {"name": "parentSuite", "value": "test_case.test_2_homepage.test_1_ride"}, {"name": "suite", "value": "test_3_banner"}, {"name": "subSuite", "value": "TestHomepageRideBanner"}, {"name": "host", "value": "ZhangdeMacBook-Pro.local"}, {"name": "thread", "value": "17715-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_2_homepage.test_1_ride.test_3_banner"}]}